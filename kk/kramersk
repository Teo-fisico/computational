import numpy as np
import matplotlib.pyplot as plt

# Leer datos desde archivo
datos = np.loadtxt('datos_absorcion.txt')
omega = datos[:, 0]  # frecuencia ω
alpha = datos[:, 1]  # coeficiente de absorción α(ω)

# Constantes
c = 2.998e10  # velocidad de la luz en cm/s

# Calcular k(ω) a partir de α(ω)
k = alpha * c / (2 * omega)

# Función de Kramers-Kronig discreta para n(ω)
def calcular_n(omega, k):
    n = np.zeros_like(omega)
    for i in range(len(omega)):
        suma = 0
        for j in range(len(omega)):
            if i != j:
                suma += omega[j] * k[j] / (omega[j]**2 - omega[i]**2)
        n[i] = 1 + (2 / np.pi) * suma * (omega[1] - omega[0])  # se asume espaciado uniforme
    return n

# Calcular n(ω)
n = calcular_n(omega, k)

# Guardar resultados en txt
np.savetxt('indice_refraccion.txt', np.column_stack((omega, n)), header='omega n(omega)')

# Graficar
plt.figure(figsize=(8,5))
plt.plot(omega, n, label='n(ω)', color='blue')
plt.xlabel('ω (rad/s)')
plt.ylabel('Índice de refracción n(ω)')
plt.title('Índice de Refracción a partir de α(ω) (Kramers-Kronig)')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()
